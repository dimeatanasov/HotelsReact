{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fakultet\\\\V semestar\\\\Web Programiranjj\\\\React-master\\\\React-master\\\\src\\\\components\\\\AddWorker.js\";\nimport React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList, faPlusCircle, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from 'axios';\nimport MyToast from \"./myToast\";\nexport default class AddWorker extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      workerId: '',\n      workerName: '',\n      workerLastName: '',\n      hotelId: '',\n      workerShift: ''\n    };\n\n    this.findHotelById = workerId => {\n      axios.get(\"http://localhost:8080/api/workers/\" + workerId).then(response => {\n        if (response != null) {\n          this.setState({\n            workerId: response.data.workerId,\n            workerName: response.data.workerName,\n            workerLastName: response.data.workerLastName,\n            hotelId: response.data.hotelId,\n            workerShift: response.data.workerShift\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error - \" + error);\n      });\n    };\n\n    this.submitWorker = event => {\n      event.preventDefault();\n      const worker = {\n        workerId: this.state.workerId,\n        workerName: this.state.workerName,\n        workerLastName: this.state.workerLastName,\n        hotelId: this.state.hotelId,\n        workerShift: this.state.workerShift\n      };\n      axios.post(\"http://localhost:8080/api/workers\", worker).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 300);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.resetValues = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.workerChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.workerList = () => {\n      return this.props.history.push(\"/workerList\");\n    };\n\n    this.state = this.initialState;\n    this.workerChange = this.workerChange.bind(this);\n    this.submitWorker = this.submitWorker.bind(this);\n    this.state.show = false;\n  }\n\n  componentDidMount() {\n    const workerId = +this.props.match.params.workerId;\n\n    if (workerId) {\n      this.findHotelById(workerId);\n    }\n  }\n\n  render() {\n    const {\n      workerId,\n      workerName,\n      workerLastName,\n      hotelId,\n      workerShift\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MyToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Book Updated Successfully.\" : \"Book Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlusCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), \"Add worker\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetValues,\n      onSubmit: this.submitWorker,\n      id: \"addWorkerForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGroupWorkerId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, \"Worker ID\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"workerId\",\n      value: workerId,\n      onChange: this.workerChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter worker ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGroupWorkerName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, \"Worker name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"workerName\",\n      value: workerName,\n      onChange: this.workerChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter worker name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGroupWorkerLastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, \"Worker last name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"workerLastName\",\n      value: workerLastName,\n      onChange: this.workerChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter worker last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGroupHotelId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, \"Hotel Id\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"hotelId\",\n      value: hotelId,\n      onChange: this.workerChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter hotel Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGroupWorkerShift\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }, \"Worker shift\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"workerShift\",\n      value: workerShift,\n      onChange: this.workerChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter worker shift\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      style: {\n        \"textAlign\": \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      size: \"sm\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }), \"Submit\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      size: \"sm\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }), \"Reset\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      size: \"sm\",\n      type: \"button\",\n      onClick: this.workerList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }), \"Worker list\")))));\n  }\n\n}","map":{"version":3,"sources":["D:/Fakultet/V semestar/Web Programiranjj/React-master/React-master/src/components/AddWorker.js"],"names":["React","Component","Card","Form","Button","Col","FontAwesomeIcon","faList","faPlusCircle","faSave","faUndo","axios","MyToast","AddWorker","constructor","props","initialState","workerId","workerName","workerLastName","hotelId","workerShift","findHotelById","get","then","response","setState","data","catch","error","console","submitWorker","event","preventDefault","worker","state","post","setTimeout","resetValues","workerChange","target","name","value","workerList","history","push","bind","show","componentDidMount","match","params","render","method"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faList, faPlusCircle, faSave, faUndo} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from 'axios';\nimport MyToast from \"./myToast\";\n\nexport default class AddWorker extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.workerChange = this.workerChange.bind(this);\n        this.submitWorker = this.submitWorker.bind(this);\n        this.state.show = false;\n    }\n\n    initialState = {\n        workerId: '',\n        workerName:'',\n        workerLastName:'',\n        hotelId:'',\n        workerShift:''\n    };\n\n    componentDidMount() {\n        const workerId = +this.props.match.params.workerId;\n        if(workerId){\n            this.findHotelById(workerId);\n        }\n    }\n\n    findHotelById = (workerId) =>{\n        axios.get(\"http://localhost:8080/api/workers/\"+workerId)\n            .then(response => {\n                if(response != null){\n                    this.setState({\n                        workerId: response.data.workerId,\n                        workerName: response.data.workerName,\n                        workerLastName: response.data.workerLastName,\n                        hotelId: response.data.hotelId,\n                        workerShift: response.data.workerShift\n                    });\n                }\n            }).catch((error) =>{\n            console.error(\"Error - \" +error);\n        });\n    };\n\n    submitWorker = event => {\n        event.preventDefault();\n\n        const worker = {\n            workerId: this.state.workerId,\n            workerName: this.state.workerName,\n            workerLastName: this.state.workerLastName,\n            hotelId: this.state.hotelId,\n            workerShift: this.state.workerShift\n        };\n\n        axios.post(\"http://localhost:8080/api/workers\", worker)\n            .then(response => {\n                if(response.data != null){\n                    this.setState({\"show\" : true});\n                    setTimeout(() => this.setState({\"show\" : false}), 300);\n                }else{\n                    this.setState({\"show\" : false});\n                }\n            });\n\n        this.setState(this.initialState);\n\n    };\n\n    resetValues = () => {\n        this.setState(() => this.initialState);\n    };\n\n    workerChange = event => {\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    };\n\n    workerList = () =>{\n        return this.props.history.push(\"/workerList\");\n    };\n\n    render() {\n\n        const {workerId, workerName, workerLastName, hotelId, workerShift} = this.state;\n\n        return (\n            <div>\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\n                    <MyToast show = {this.state.show} message = {this.state.method === \"put\" ? \"Book Updated Successfully.\" : \"Book Saved Successfully.\"} type = {\"success\"}/>\n                </div>\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={faPlusCircle} />Add worker\n                    </Card.Header>\n                    <Form onReset={this.resetValues} onSubmit={this.submitWorker} id=\"addWorkerForm\">\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGroupWorkerId\">\n                                    <Form.Label>Worker ID</Form.Label>\n                                    <Form.Control required autoComplete=\"off\"\n                                                  type=\"text\"\n                                                  name=\"workerId\"\n                                                  value={workerId}\n                                                  onChange={this.workerChange}\n                                                  className={\"bg-dark text-white\"}\n                                                  placeholder=\"Enter worker ID\"/>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGroupWorkerName\">\n                                    <Form.Label>Worker name</Form.Label>\n                                    <Form.Control required autoComplete=\"off\"\n                                                  type=\"text\"\n                                                  name=\"workerName\"\n                                                  value={workerName}\n                                                  onChange={this.workerChange}\n                                                  className={\"bg-dark text-white\"}\n                                                  placeholder=\"Enter worker name\"/>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGroupWorkerLastName\">\n                                    <Form.Label>Worker last name</Form.Label>\n                                    <Form.Control required autoComplete=\"off\"\n                                                  type=\"text\"\n                                                  name=\"workerLastName\"\n                                                  value={workerLastName}\n                                                  onChange={this.workerChange}\n                                                  className={\"bg-dark text-white\"}\n                                                  placeholder=\"Enter worker last name\"/>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGroupHotelId\">\n                                    <Form.Label>Hotel Id</Form.Label>\n                                    <Form.Control required autoComplete=\"off\"\n                                                  type=\"text\"\n                                                  name=\"hotelId\"\n                                                  value={hotelId}\n                                                  onChange={this.workerChange}\n                                                  className={\"bg-dark text-white\"}\n                                                  placeholder=\"Enter hotel Id\"/>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGroupWorkerShift\">\n                                    <Form.Label>Worker shift</Form.Label>\n                                    <Form.Control required autoComplete=\"off\"\n                                                  type=\"text\"\n                                                  name=\"workerShift\"\n                                                  value={workerShift}\n                                                  onChange={this.workerChange}\n                                                  className={\"bg-dark text-white\"}\n                                                  placeholder=\"Enter worker shift\"/>\n                                </Form.Group>\n                            </Form.Row>\n                        </Card.Body>\n                        <Card.Footer style={{\"textAlign\":\"right\"}}>\n                            <Button variant=\"success\" size=\"sm\" type=\"submit\">\n                                <FontAwesomeIcon icon={faSave} />Submit\n                            </Button>{' '}\n                            <Button variant=\"info\" size=\"sm\" type=\"reset\">\n                                <FontAwesomeIcon icon={faUndo} />Reset\n                            </Button>{' '}\n                            <Button variant=\"info\" size=\"sm\" type=\"button\" onClick={this.workerList.bind()}>\n                                <FontAwesomeIcon icon={faList} />Worker list\n                            </Button>\n                        </Card.Footer>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}